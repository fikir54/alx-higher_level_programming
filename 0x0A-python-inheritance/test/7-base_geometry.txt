Testing The 7-base_geometry.txt file

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()


============================================+===========================
Tese_case 1: value = integer

>>> bg.area() # doctest +ELLIPSIS
Traceback (most recent call last):
...
Exception: area() is not implemented



	
	>>> bg.integer_validator('age', 15)


	

	
	>>> bg.integer_validator('age', '15') # doctest: +ELLIPSIS
	Traceback (most recent call last):
	...
	TypeError: age must be an integer


  

	
	>>> bg.integer_validator('age', -1) # doctest: +ELLIPSIS
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0


	

	
	>>> bg.integer_validator('age', 0) # doctest: +ELLIPSIS
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0


       >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry


module docstring:
         >>> m = __import__("7-base_geometry").__doc__
         >>> len(m) > 1
         True



class docstring:
         >>> c = __import__("7-base_geometry").BaseGeometry.__doc__
         >>> len(c) > 1
         True



	 >>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
	 >>> len(mod1) > 1
	 True
	 >>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
         >>> len(mod2) > 1
         True


	 >>> bg.area() # doctest: +ELLIPSIS
	 Traceback (most recent call last):
	 ...
	 Exception: area() is not implemented



	 >>> bg.area(1) # doctest: +ELLIPSIS
	 Traceback (most recent call last):
         ...
	 TypeError: area() takes 1 positional argument but 2 were given



	 >>> bg.integer_validator("integer", 1)



	 >>> bg.integer_validator("age", 0) # doctest: +ELLIPSIS
	 Traceback (most recent call last):
         ...
         ValueError: age must be greater than 0



	 >>> bg.integer_validator("age", -5) # doctest: +ELLIPSIS
	 Traceback (most recent call last):
         ...
         ValueError: age must be greater than 0



	 >>> bg.integer_validator("bool", True) # doctest: +ELLIPSIS
	 Traceback (most recent call last):
         ...
         TypeError: bool must be an integer
	 >>> bg.integer_validator("float", 1.5) # doctest: +ELLIPSIS
         Traceback (most recent call last):
         ...
         TypeError: float must be an integer
	 >>> bg.integer_validator("complex", complex(1, 1)) # doctest: +ELLIPSIS
         Traceback (most recent call last):
         ...
         TypeError: complex must be an integer
	 
         bg.integer_validator() # doctest: +ELLIPSIS
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'



	 >>> bg.integer_validator("integer") # doctest: +ELLIPSIS
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() missing 1 required positional argument: 'value'



	 >>> bg.integer_validator("integer", 1, 2) # doctest: +ELLIPSIS
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() takes 3 positional arguments but 4 were given
   
